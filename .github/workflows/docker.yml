name: Docker

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  LATEST_IMAGE_TAG: latest-staging

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Log in to Docker Hub (again)
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      #   run: |
      #     docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      # Let's get setup with Node
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Setup Env Vars
        run: |
          mkdir secrets
          echo "${{secrets.SAUSAGE_PUBLIC_FRONTEND_PROD_ENV }}" > secrets/sausage-public-frontend.prod.env
          echo "${{secrets.SAUSAGE_PUBLIC_REDESIGN_FRONTEND_PROD_ENV }}" > secrets/sausage-public-redesign-frontend.prod.env
          echo "${{secrets.SAUSAGE_ADMIN_FRONTEND_PROD_ENV }}" > secrets/sausage-admin-frontend.prod.env
          echo "${{secrets.SAUSAGE_WEB_PROD_LOCAL_ENV }}" > secrets/sausage-web.prod-local.env
          echo "${{secrets.SAUSAGE_DB_DEV_ENV }}" > secrets/sausage-db.dev.env
          echo "${{secrets.REDIS_ENV }}" > secrets/redis.env
          echo "${{secrets.SAUSAGE_WEB_DEV_ENV }}" > secrets/sausage-web.dev.env
          echo "${{secrets.SAUSAGE_WEB_DB_DEV_ENV }}" > secrets/sausage-web-db.dev.env
          echo "${{secrets.SAUSAGE_DB_DEV_ENV }}" > sausage-db.dev.env

      # - name: Retrieve the secret and decode it to a file
      #   env:
      #     TEST_ENV_BASE64: ${{ secrets.TEST_ENV_BASE64 }}
      #   run: |
      #     echo $TEST_ENV_BASE64 | base64 --decode > secrets/test.env

      - name: Test
        run: |
          echo "docker build -t keithmoss/demsausage-nginx:$GITHUB_SHA -t keithmoss/demsausage-nginx:${{ env.LATEST_IMAGE_TAG }} ."
        working-directory: nginx-prod

      # - name: Build - Prep
      #   run: |
      #     mkdir ./build
      #     mkdir ./nginx-prod/build

      # - name: Public Frontend - Install
      #   run: yarn install
      #   working-directory: public

      # - name: Public Frontend - Build
      #   run: ./build.sh
      #   working-directory: public

      # - name: Public Admin - Install
      #   run: yarn install
      #   working-directory: admin

      # - name: Public Admin - Build
      #   run: ./build.sh
      #   working-directory: admin

      # - name: Public Redesign Frontend - Install
      #   run: yarn install
      #   working-directory: public-redesign

      # - name: Public Redesign Frontend - Build
      #   run: ./build.sh
      #   working-directory: public-redesign

      # - name: Django - Build Docker Container
      #   run: docker compose --file build.yml build django

      # - name: Django - Build Static Assets
      #   run: docker compose --file build.yml run django

      # - name: Containers - Build Nginx
      #   run: |
      #     ls -l ./build/
      #     ls -l ./build/
      #     docker build -t keithmoss/demsausage-nginx:${{ env.GITHUB_SHA }} -t keithmoss/demsausage-nginx:${{ env.LATEST_IMAGE_TAG }} .
      #   working-directory: nginx-prod

      # - name: Containers - Build Django
      #   run: |
      #     ls -l ./build/
      #     docker build -t keithmoss/demsausage-django:${{ env.GITHUB_SHA }} -t keithmoss/demsausage-django:${{ env.LATEST_IMAGE_TAG }} .
      #   working-directory: django

      # - name: Containers - Build RQ Dashboard
      #     ls -l ./build/
      #   run: docker build -t keithmoss/demsausage-rq-dashboard:${{ env.GITHUB_SHA }} -t keithmoss/demsausage-rq-dashboard:${{ env.LATEST_IMAGE_TAG }} .

      # - name: Containers - Push to Docker Hub
      #   run: |
      #     docker push keithmoss/demsausage-nginx --all-tags
      #     docker push keithmoss/demsausage-django --all-tags
      #     docker push keithmoss/demsausage-rq-dashboard --all-tags
